[tool.poetry]
name = "brutils"
version = "2.3.0"
description = "Utils library for specific Brazilian businesses"
authors = ["The Brazilian Utils Organization"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/brazilian-utils/brutils"
keywords = ["cpf", "cnpj", "cep", "document", "validation", "brazil", "brazilian"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Office/Business",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Natural Language :: English",
  "Natural Language :: Portuguese",
  "Natural Language :: Portuguese (Brazilian)"
]

[tool.poetry.dependencies]
python = "^3.10"
holidays = "^0.58"
num2words = "0.5.14"
coverage = "^7.2.7"

[tool.poetry.group.test.dependencies]
coverage = "^7.2.7"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.5.0,<0.7.0"

[tool.ruff]
line-length = 80
lint.extend-select = ["I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.git-cliff.changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
"""
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{% endif -%}

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {%- for commit in commits %}
        - {{ commit.message | split(pat="\n") | first | upper_first | trim }}\
            {% if commit.remote.username %} by @{{ commit.remote.username }}{%- endif -%}
            {% if commit.remote.pr_number %} in \
            [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}) \
            {%- endif -%}
    {% endfor %}
{% endfor %}

{%- if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
    ### New Contributors
{%- endif -%}

{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor %}\n

{%- if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}{% raw %}\n{% endraw -%}{% endif %}

"""
footer = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | trim_start_matches(pat="v") }}]: \
                {{ self::remote_url() }}/compare/{{ release.previous.version }}...{{ release.version }}
        {% endif -%}
    {% else -%}
        [unreleased]: {{ self::remote_url() }}/compare/{{ release.previous.version }}...HEAD
    {% endif -%}
{% endfor %}
<!-- generated by git-cliff -->
"""
trim = true

[tool.git-cliff.git]
conventional_commits = true
filter_unconventional = false
commit_preprocessors = [
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "" },
]
commit_parsers = [
  { message = "^feat", group = "Added" },
  { message = "^fix", group = "Fixed" },
  { message = "^docs", group = "Changed" },
  { message = "^refactor", group = "Changed" },
  { message = "^perf", group = "Changed" },
  { message = "^breaking", group = "Deprecated" },
  { message = "^test", skip = true },
  { message = "^ci", skip = true },
  { message = "^build", skip = true },
  { message = "^chore\\(release\\)", skip = true },
  { message = "^chore: release", skip = true },
  { message = "^chore", skip = true },
]
filter_commits = false
topo_order = false
sort_commits = "newest"

[tool.git-cliff.remote.github]
owner = "brazilian-utils"
repo = "python"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
